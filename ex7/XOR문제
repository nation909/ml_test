# XOR(exclusive OR) 문제

컴퓨터는 0 or 1의 두가지값을 입력해 하나의 값을 출력하는 회로가 모여 만들어짐
이회로를 게이트(gate)라고 부름

# AND 게이트, OR 게이트, XOR 게이트
AND 게이트: x1, x2가 둘다 1일경우 1출력
OR 게이트: x1, x2 둘중에 하나라도 1이면 1출력
XOR 게이트: x1, x2 둘중에 하나만 1일때 1출력

기존 퍼셉트론의 개념으로는 평면이여서 XOR같은 문제를 해결을 못함
이후 다층퍼셉트론이라는 개념으로 해결

은닉층을 만들어 공간을 왜곡하여 직선이여도 영역을 가를수 있도록 함
은닉층을 통해서 해결하는 과정이 뉴런이 복잡한 과정을거쳐 사고를 낳는 사람의 신경망과 닮아서
이를 인공신경망이라고 하고 간단히 줄여서 신경망이라고 함

기존 퍼셉트론
입력x1, 입력x2 -> 출력

다층 퍼셉트론
입력x1, 입력x2 -> 은닉층 -> 출력
은닉층에 모이는 중간정거장을 노드라고 함

EX.
입력: x1, x2
출력: y
x1이 n1에게 w11로, n2(은닉층 노드)에게 w12로 보냄
x2가 n1에게 w21로, n2(은닉층 노드)에게 w22로 보냄
은닉층 n1이 y에게 w31로 보냄
은닉층 n2가 y에게 w32로 보냄

n1 = 시그모이드함수(x1 * w11 + x2 * w21 + b1)
n2 = 시그모이드함수(x1 * w12 + x2 * w22 + b2)
2식의 결과값이 출력층으로 보내짐
y = 시그모이드함수(n1 * w31 + n2 * w32 + b3)

2차원 배열로 표시할 경우
W(1) = [w11, w12
        w21, w22]
B(1) = [b1
        b2]

W(2) = [w31
        w32]
B(2) = [b3]


EX. XOR와 같은 결과값이 나오는지 확인 예제
# n1 = 시그모이드함수(x1 * w11 + x2 * w21 + b1)
# n2 = 시그모이드함수(x1 * w12 + x2 * w22 + b2)
# 2식의 결과값이 출력층으로 보내짐
# y = 시그모이드함수(n1 * w31 + n2 * w32 + b3)
# W(1) = [-2, 2
#         -2, 2]
# B(1) = [3
#        -1]
# W(2) = [1
#         1]
# B(2) = [-1]

# x1:0, x2:0일때
# n1 = sigmoid(0 * (-2) + 0 * (-2) + 3) = +값이므로 1
# n2 = sigmoid(0 * 2 + 0 * 2 - 1) = -값이므로 0
# y = sigmoid(1 * 1 + 0 * 1 - 1) = 값이 0이므로 0

# x1:0, x2:1일때
# n1 = sigmoid(0 * (-2) + 1 * (-2) + 3) = +값이므로 1
# n2 = sigmoid(0 * 2 + 1 * 2 -1) = +값이므로 1
# y = sigmoid(1 * 1 + 1 * 1 - 1) = +값이므로 1

# x1:1, x2:0일때
# n1 = sigmoid(1 * (-2) + 0 * (-2) + 3) = +값이므로 1
# n2 = sigmoid(1 * 2 + 0 * 2 - 1) = +값이므로 1
# y = sigmoid(1 * 1 + 1 * 1 - 1) = +값이므로 1

# x1:1, x2:1일때
# n1 = sigmoid(1 * (-2) + 1 * (-2) + 3) = -값이므로 0
# n2 = sigmoid(1 * 2 + 1 * 2 - 1) = +값이므로 1
# y = sigmoid(0 * 1 + 1 * 1 - 1) = 값이 0이므로 0

n1의 값은 x1, x2가 모두 1일때 0을 출력하고, 하나라도 0이면 1을 출력함(NAND 게이트)
n2의 값은 x1, x2가 하나라도 1이면 1을 출력함(OR 게이트)
y의 값은 n1, n2의 값이 모두 1일때 1을 출력함(AND 게이트)